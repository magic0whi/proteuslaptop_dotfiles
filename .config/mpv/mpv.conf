vo=gpu-next
profile=gpu-hq
gpu-api=vulkan
vulkan-device='AMD Radeon Graphics (RADV GFX1103_R1)'
hwdec=vulkan
#hwdec=vaapi

ao=pipewire
# 需要独占音频则去掉注释。开启会使得其他程序没声音。
#audio-exclusive=yes

# 如果双声道系统播放多声道影片时有的声道声音没出现，尝试强制设定为双声道 stereo
audio-channels=auto
# 规格化：
#audio-normalize-downmix=yes
# 多声道音轨downmix成双声道时，如果觉得背景音过响，角色台词声音小，尝试看看这个：https://github.com/mpv-player/mpv/issues/6563

# 如果需要记忆上次播放的位置，去掉下面这行的注释。不能与SVP共存，使用SVP必须把此项设为no。
#save-position-on-quit
# 注意，需要mpv.conf所在文件夹有用户写入权限，或者用watch-later-directory=路径来手动指定。
# mpv.conf放APPDATA里是不会有问题的，有问题的是放mpv安装目录但mpv安装目录本身需要管理员权限

# May help with 4K videos
vd-lavc-dr=yes
opengl-pbo=yes

# 如果要插其他视频滤镜，比如deint或者SVP，就要去掉下面这行的注释
#hr-seek-framedrop=no

# "ReClock" replacement
video-sync=display-resample
video-sync-max-video-change=5

temporal-dither
dither-size-fruit=7
# 默认6。会稍微延缓mpv启动
# 有兴趣也可以测试下error diffusion算法

# Smooth motion, 2倍内存占用
interpolation

# interpolation 算法。详见https://mpv.io/manual/master/#options-tscale
# 默认为mitchell。总体而言mitchell更平滑（当然不好和SVP插帧比），但会有模糊。oversample没有模糊，但不平滑（基本还原24帧的样子）
# 具体选择哪个请依据自身需求来
tscale=oversample

#log-file="~~desktop/mpv.log"

#icc-profile-auto  # 启用校色
icc-profile=/home/proteus/sync-work/TPLCD_8AAE_AdobeRGB.icm
icc-3dlut-size=256x256x256
# 默认64x64x64。会稍微延缓mpv启动, 增加内存占用约500M

# 在mpv.conf所在目录下建一个 shaders_cache 空文件夹，以存放编译好的GPU shaders，加速启动。
gpu-shader-cache-dir="~~/shaders_cache"

# 播放结束后不退出
keep-open=yes

# 始终处于最前阶段。配合ontop-playback.lua可以使得暂停之后解除保持最前端。
#ontop

sub-auto=fuzzy
sub-file-paths=subs
slang=chi,zh-CN,sc,chs
#sid=1
# 字幕显示出来和xy-subfilter不一样？尝试启用下面的设置
# 关乎字幕是否随视频拉伸
#sub-ass-vsfilter-aspect-compat=no
# 关乎字幕模糊的设定
#sub-ass-vsfilter-blur-compat=no
# 即使都用上了也不一致？那不是这两个选项的问题，重新注释掉这两行，回帖问吧。（多半是vsfilter/libass其中一个的bug）

audio-file-auto=fuzzy
#audio-file-paths=audio
alang=eng,en
#aid=1
# 暂时无法根据其他的metadata选择轨道，mpv又默认偏好外挂轨道，常常选到我不想要的音轨
# 有类似情况的话就用aid=1始终选择第一条音轨再自己手动调吧
# 设计者也是这么推荐的：https://github.com/mpv-player/mpv/issues/967#issuecomment-94744964

screenshot-format=png
screenshot-tag-colorspace=yes
screenshot-high-bit-depth=yes
#screenshot-png-compression=0
#screenshot-png-filter=0

# 根据视频是否是HDR以及视频aspect ratio决定是否启用blend-subtitles的profile
# 目前HDR->SDR建议关闭blend-subtitles，见https://github.com/mpv-player/mpv/issues/6368
# 如果hdr-compute-peak将来继续改进可能可以兼容blend-subtitles
[HDR_or_21:9]
profile-desc=cond:(p["video-params/primaries"]=="bt.2020" or p["video-params/aspect"]>=2.0)
blend-subtitles=no
# 使字幕输出在黑边上
sub-ass-force-margins=yes

[SDR_and_16:9]
profile-desc=cond:(p["video-params/primaries"]~="bt.2020" and p["video-params/aspect"]<2.0)
blend-subtitles=yes
sub-ass-force-margins=no

# 以下根据分辨率和视频帧率设置不同的升/降阶算法，以期获得在能不掉帧的情况下达到最好的效果

# Create a profile based on gpu-hq,
[high_quality]
profile=gpu-hq
fbo-format=rgba32f
vd-lavc-threads=0

# 1080 * 1.414213 / 4 = 381.8
[low] # 240p 360p，启用两次倍增以达到4倍.
profile-desc=cond:(p["video-params/w"]<=678 and p["video-params/h"]<=381)
profile=high_quality
#glsl-shaders-clr
#glsl-shaders-append="~~/shaders/KrigBilateral.glsl"
#glsl-shaders-append="~~/shaders/nnedi3-nns32-win8x4.hook"
#glsl-shaders-append="~~/shaders/nnedi3-nns32-win8x4.hook"

# 1080 / 16 * 9 = 607.5
[SD] # 480p 576p
profile-desc=cond:((p["video-params/w"]<1080 and p["video-params/h"]<608) and (p["video-params/w"]>678 or p["video-params/h"]>381))
profile=high_quality
#glsl-shaders-clr
#glsl-shaders-append="~~/shaders/KrigBilateral.glsl"
#glsl-shaders-append="~~/shaders/nnedi3-nns64-win8x4.hook"

# 1080 * 1.414213 / 2 = 763.7
[HD30] # 640p 720p 30fps
profile-desc=cond:((p["video-params/w"]<1358 and p["video-params/h"]<764) and (p["video-params/w"]>=1080 or p["video-params/h"]>=608) and p["estimated-vf-fps"]<31)
profile=high_quality
#glsl-shaders-clr
#glsl-shaders-append="~~/shaders/KrigBilateral.glsl"
#glsl-shaders-append="~~/shaders/nnedi3-nns32-win8x4.hook"

[HD60] # 640p 720p 60fps
profile-desc=cond:((p["video-params/w"]<1358 and p["video-params/h"]<764) and (p["video-params/w"]>=1080 or p["video-params/h"]>=608) and p["estimated-vf-fps"]>=31)
profile=high_quality
#glsl-shaders-clr
#glsl-shaders-append="~~/shaders/KrigBilateral.glsl"
#glsl-shaders-append="~~/shaders/SSimSuperRes.glsl"
# For SSimSuperRes it is recommend to turn off sigmoid-upscaling. 所以在其他不用SSSR的profile中都要重新设为yes（通过重新设定一遍profile=gpu-hq）
#sigmoid-upscaling=no

[FHD] # 1080p
profile-desc=cond:((p["video-params/w"]<=1920 and p["video-params/h"]<=1080) and (p["video-params/w"]>=1358 or p["video-params/h"]>=764))
#profile=KrigBilateral

[2K30] # 1440p
profile-desc=cond:((p["video-params/w"]<=2560 and p["video-params/h"]<=1440) and (p["video-params/w"]>1920 or p["video-params/h"]>1080) and p["estimated-vf-fps"]<31)
#profile=KrigBilateral

# 4K videos
[4K30] # low fps: use SSIM to downscale
profile-desc=cond:((p["video-params/w"]>2560 or p["video-params/h"]>1440) and p["estimated-vf-fps"]<31)
profile=high_quality
#glsl-shaders-clr
#glsl-shaders-append="~~/shaders/SSimDownscaler.glsl"
# SSimDownscaler requires turned off linear-dewnscaling. 需要在其他profile中重新设为yes（通过重新设定一遍profile=gpu-hq）
#linear-downscaling=no

[UHD60] # high fps: use no glsl-shaders
profile-desc=cond:((p["video-params/w"]>1920 or p["video-params/h"]>1080) and p["estimated-vf-fps"]>=31)
#glsl-shaders-clr
# 如果是1080p屏幕播放4K，可以使用https://gist.github.com/bjin/15f307e7a1bdb55842bbb663ee1950ed
# glsl-shaders-append="~~/shaders/acme-0.5x.hook"
# 可以绕过chroma upscaling，并且把之后颜色转换的计算量从4K级降到1080p级。
fbo-format=auto
#vd-lavc-threads=16
# 4K HEVC HDR 60fps软解压力很大，默认vd-lavc-threads=0自动识别逻辑核数，分配核数+1个线程，但往往不够，不能将CPU性能压榨到极限，强行分配更多线程数以提高软解性能。
# 或者直接开硬解，如果显卡支持的话
